{"meta":{"title":"CBlog","subtitle":"记录学习","description":"","author":"Soch_","url":"https://cyx13935786602.github.io","root":"/"},"pages":[{"title":"about","date":"2020-01-03T12:51:36.000Z","updated":"2020-01-04T15:41:38.616Z","comments":true,"path":"about/index.html","permalink":"https://cyx13935786602.github.io/about/index.html","excerpt":"","text":"本BLOG用于记录学习进程。 可用于学习和交流。"},{"title":"categories","date":"2020-01-03T13:29:52.000Z","updated":"2020-01-03T13:35:00.619Z","comments":true,"path":"categories/index.html","permalink":"https://cyx13935786602.github.io/categories/index.html","excerpt":"","text":""},{"title":"guestbook","date":"2020-01-04T14:16:20.000Z","updated":"2020-01-04T14:16:20.884Z","comments":true,"path":"guestbook/index.html","permalink":"https://cyx13935786602.github.io/guestbook/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-01-03T13:26:28.000Z","updated":"2020-01-03T13:28:45.507Z","comments":true,"path":"tags/index.html","permalink":"https://cyx13935786602.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"动态DP","slug":"动态DP","date":"2020-01-03T15:24:45.000Z","updated":"2020-01-03T15:45:09.645Z","comments":true,"path":"2020/01/03/动态DP/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E5%8A%A8%E6%80%81DP/","excerpt":"","text":"","categories":[{"name":"动态规划 - 优化","slug":"动态规划-优化","permalink":"https://cyx13935786602.github.io/categories/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-%E4%BC%98%E5%8C%96/"}],"tags":[{"name":"DP","slug":"DP","permalink":"https://cyx13935786602.github.io/tags/DP/"}]},{"title":"树形DP","slug":"树形DP","date":"2020-01-03T15:24:37.000Z","updated":"2020-01-03T15:37:29.608Z","comments":true,"path":"2020/01/03/树形DP/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E6%A0%91%E5%BD%A2DP/","excerpt":"","text":"","categories":[{"name":"动态规划","slug":"动态规划","permalink":"https://cyx13935786602.github.io/categories/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"}],"tags":[{"name":"DP","slug":"DP","permalink":"https://cyx13935786602.github.io/tags/DP/"}]},{"title":"区间DP","slug":"区间DP","date":"2020-01-03T15:24:28.000Z","updated":"2020-01-03T15:36:23.258Z","comments":true,"path":"2020/01/03/区间DP/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E5%8C%BA%E9%97%B4DP/","excerpt":"","text":"","categories":[{"name":"动态规划","slug":"动态规划","permalink":"https://cyx13935786602.github.io/categories/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"}],"tags":[{"name":"DP","slug":"DP","permalink":"https://cyx13935786602.github.io/tags/DP/"}]},{"title":"单调队列优化","slug":"单调队列优化","date":"2020-01-03T15:24:22.000Z","updated":"2020-01-03T15:48:47.792Z","comments":true,"path":"2020/01/03/单调队列优化/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E4%BC%98%E5%8C%96/","excerpt":"","text":"","categories":[{"name":"动态规划 - 优化","slug":"动态规划-优化","permalink":"https://cyx13935786602.github.io/categories/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-%E4%BC%98%E5%8C%96/"}],"tags":[{"name":"DP","slug":"DP","permalink":"https://cyx13935786602.github.io/tags/DP/"}]},{"title":"斜率优化","slug":"斜率优化","date":"2020-01-03T15:24:10.000Z","updated":"2020-01-03T15:41:05.807Z","comments":true,"path":"2020/01/03/斜率优化/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E6%96%9C%E7%8E%87%E4%BC%98%E5%8C%96/","excerpt":"","text":"","categories":[{"name":"动态规划 - 优化","slug":"动态规划-优化","permalink":"https://cyx13935786602.github.io/categories/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-%E4%BC%98%E5%8C%96/"}],"tags":[{"name":"DP","slug":"DP","permalink":"https://cyx13935786602.github.io/tags/DP/"}]},{"title":"四边形不等式优化","slug":"四边形不等式优化","date":"2020-01-03T15:24:01.000Z","updated":"2020-01-04T15:22:03.199Z","comments":true,"path":"2020/01/03/四边形不等式优化/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E5%9B%9B%E8%BE%B9%E5%BD%A2%E4%B8%8D%E7%AD%89%E5%BC%8F%E4%BC%98%E5%8C%96/","excerpt":"","text":"","categories":[{"name":"动态规划 - 优化","slug":"动态规划-优化","permalink":"https://cyx13935786602.github.io/categories/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-%E4%BC%98%E5%8C%96/"}],"tags":[{"name":"DP","slug":"DP","permalink":"https://cyx13935786602.github.io/tags/DP/"}]},{"title":"WQS二分","slug":"WQS二分","date":"2020-01-03T15:23:50.000Z","updated":"2020-01-03T15:48:46.754Z","comments":true,"path":"2020/01/03/WQS二分/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/WQS%E4%BA%8C%E5%88%86/","excerpt":"","text":"","categories":[{"name":"动态规划 - 优化","slug":"动态规划-优化","permalink":"https://cyx13935786602.github.io/categories/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-%E4%BC%98%E5%8C%96/"}],"tags":[{"name":"DP","slug":"DP","permalink":"https://cyx13935786602.github.io/tags/DP/"}]},{"title":"后缀数组","slug":"后缀数组","date":"2020-01-03T15:23:24.000Z","updated":"2020-01-03T15:34:42.038Z","comments":true,"path":"2020/01/03/后缀数组/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84/","excerpt":"","text":"","categories":[{"name":"字符串","slug":"字符串","permalink":"https://cyx13935786602.github.io/categories/%E5%AD%97%E7%AC%A6%E4%B8%B2/"}],"tags":[{"name":"字符串","slug":"字符串","permalink":"https://cyx13935786602.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"}]},{"title":"KMP","slug":"KMP","date":"2020-01-03T15:23:15.000Z","updated":"2020-01-03T15:28:00.017Z","comments":true,"path":"2020/01/03/KMP/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/KMP/","excerpt":"","text":"","categories":[{"name":"字符串","slug":"字符串","permalink":"https://cyx13935786602.github.io/categories/%E5%AD%97%E7%AC%A6%E4%B8%B2/"}],"tags":[{"name":"字符串","slug":"字符串","permalink":"https://cyx13935786602.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"}]},{"title":"AC自动机","slug":"AC自动机","date":"2020-01-03T15:22:55.000Z","updated":"2020-01-03T15:27:21.837Z","comments":true,"path":"2020/01/03/AC自动机/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/","excerpt":"","text":"","categories":[{"name":"字符串","slug":"字符串","permalink":"https://cyx13935786602.github.io/categories/%E5%AD%97%E7%AC%A6%E4%B8%B2/"}],"tags":[{"name":"字符串","slug":"字符串","permalink":"https://cyx13935786602.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"}]},{"title":"Manachar","slug":"Manachar","date":"2020-01-03T15:22:35.000Z","updated":"2020-01-04T03:52:44.440Z","comments":true,"path":"2020/01/03/Manachar/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/Manachar/","excerpt":"","text":"算法简述给定一个长度为 $n$ 的字符串 $s$, 找到所有的数对 (i, j), 使得字串s[i…j]是回文串。 当且仅当 $t = t_{rec}$ 时， 字符串 $t$ 为一个回文子串。 朴素算法用 O($n^2$) 时间预处理出所有回文串， 而Manachar算法可以在 O(n) 线性时间内预处理出所需答案。 算法内容我们设数组 P[ ] 为以 $i$ 为中心的向右扩展回文串长度。 我们假设我们已经维护前 $i - 1$ 的 P[ ]。设 $maxlen$ 为前 $i - 1$ 个 字串(l, r)中的最大右边界 $r_{max}$, $cet$ 为该字串中心, 在我们维护 P[ i ] 时有以下情况： 当 $i + P[2 cet - i] &lt;= maxlen$ 时 : P[i] = P[2 cet - i]; 相关证明：我们已知道 (l = cet - P[cet], r = cet + P[cet]) 是以 $cet$ 为中心的回文串， 算法实际情况如图： \\ldots\\ \\overbrace{s_{l + 1}\\ \\ldots\\ \\underbrace{s_{j - P[j] + 1}\\ \\ldots\\ s_{j}\\ \\ldots\\ s_{j + P[j] - 1}}_\\text{回文串}\\ \\ldots\\ \\underbrace{s_{i - P[j] + 1}\\ \\ldots\\ s_{i}\\ \\ldots\\ s_{i + P[j] - 1}}_\\text{回文串}\\ \\ldots\\ s_{r - 1}\\ }^\\text{回文串} \\ldots 当 $i + P[2 * cet - i] &gt; maxlen$ 时 ： P[i] = maxlen - i; 相关证明：如图： \\ldots\\ \\overbrace{\\underbrace{s_{l + 1}\\ \\ldots\\ s_{j}\\ \\ldots\\ s_{j + (r - i) - 1}}_\\text{字符串}\\ \\ldots\\ \\underbrace{s_{i - (r - i) + 1}\\ \\ldots\\ s_{i}\\ \\ \\ldots\\ s_{r - 1}}_\\text{字符串}\\ }^\\text{回文串} \\ldots 因此 P[ i ] = min { P[2 * cet - i] , maxlen - i } 但此时的 P[ i ] 还并不是正确的值，我们接下来可以用朴素算法维护出正确的 P[ i ];1while(s[i + P[i]] == s[i - P[i]]) P[i]++; 代码实现123#include&lt;iostream&gt;#include&lt;cstdio&gt;using namespace std;","categories":[{"name":"字符串","slug":"字符串","permalink":"https://cyx13935786602.github.io/categories/%E5%AD%97%E7%AC%A6%E4%B8%B2/"}],"tags":[{"name":"字符串","slug":"字符串","permalink":"https://cyx13935786602.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"}]},{"title":"Kruskal重构树","slug":"Kruskal重构树","date":"2020-01-03T15:22:01.000Z","updated":"2020-01-03T15:28:46.547Z","comments":true,"path":"2020/01/03/Kruskal重构树/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/Kruskal%E9%87%8D%E6%9E%84%E6%A0%91/","excerpt":"","text":"","categories":[{"name":"数据结构","slug":"数据结构","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}],"tags":[{"name":"数据结构","slug":"数据结构","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}]},{"title":"0-1树","slug":"0-1树","date":"2020-01-03T15:20:20.000Z","updated":"2020-01-03T15:26:32.041Z","comments":true,"path":"2020/01/03/0-1树/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/0-1%E6%A0%91/","excerpt":"","text":"","categories":[{"name":"数据结构","slug":"数据结构","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}],"tags":[{"name":"可持续化数据结构","slug":"可持续化数据结构","permalink":"https://cyx13935786602.github.io/tags/%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}]},{"title":"主席树","slug":"主席树","date":"2020-01-03T15:20:12.000Z","updated":"2020-01-03T15:42:25.715Z","comments":true,"path":"2020/01/03/主席树/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E4%B8%BB%E5%B8%AD%E6%A0%91/","excerpt":"","text":"","categories":[{"name":"数据结构 - 可持续化","slug":"数据结构-可持续化","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96/"}],"tags":[{"name":"可持续化数据结构","slug":"可持续化数据结构","permalink":"https://cyx13935786602.github.io/tags/%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"数据结构","slug":"数据结构","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}]},{"title":"LCT","slug":"LCT","date":"2020-01-03T15:19:47.000Z","updated":"2020-01-03T15:29:10.501Z","comments":true,"path":"2020/01/03/LCT/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/LCT/","excerpt":"","text":"","categories":[{"name":"数据结构","slug":"数据结构","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}],"tags":[{"name":"数据结构","slug":"数据结构","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}]},{"title":"树套树","slug":"树套树","date":"2020-01-03T15:19:39.000Z","updated":"2020-01-03T15:38:42.116Z","comments":true,"path":"2020/01/03/树套树/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E6%A0%91%E5%A5%97%E6%A0%91/","excerpt":"","text":"","categories":[{"name":"数据结构 - 嵌套","slug":"数据结构-嵌套","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%B5%8C%E5%A5%97/"}],"tags":[{"name":"数据结构","slug":"数据结构","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"嵌套","slug":"嵌套","permalink":"https://cyx13935786602.github.io/tags/%E5%B5%8C%E5%A5%97/"}]},{"title":"Treap","slug":"Treap","date":"2020-01-03T15:18:59.000Z","updated":"2020-01-04T15:35:40.926Z","comments":true,"path":"2020/01/03/Treap/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/Treap/","excerpt":"","text":"","categories":[{"name":"数据结构 - 平衡树","slug":"数据结构-平衡树","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%B9%B3%E8%A1%A1%E6%A0%91/"}],"tags":[{"name":"数据结构","slug":"数据结构","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"平衡树","slug":"平衡树","permalink":"https://cyx13935786602.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"}]},{"title":"Splay","slug":"Splay","date":"2020-01-03T15:18:53.000Z","updated":"2020-01-04T15:36:05.947Z","comments":true,"path":"2020/01/03/Splay/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/Splay/","excerpt":"","text":"","categories":[{"name":"数据结构 - 平衡树","slug":"数据结构-平衡树","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%B9%B3%E8%A1%A1%E6%A0%91/"}],"tags":[{"name":"数据结构","slug":"数据结构","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"平衡树","slug":"平衡树","permalink":"https://cyx13935786602.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"}]},{"title":"左偏树","slug":"左偏树","date":"2020-01-03T15:18:41.000Z","updated":"2020-01-04T03:15:16.468Z","comments":true,"path":"2020/01/03/左偏树/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E5%B7%A6%E5%81%8F%E6%A0%91/","excerpt":"","text":"","categories":[{"name":"数据结构 - 堆","slug":"数据结构-堆","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%A0%86/"}],"tags":[{"name":"数据结构","slug":"数据结构","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"堆","slug":"堆","permalink":"https://cyx13935786602.github.io/tags/%E5%A0%86/"}]},{"title":"数值积分","slug":"数值积分","date":"2020-01-03T15:17:38.000Z","updated":"2020-01-03T15:38:31.471Z","comments":true,"path":"2020/01/03/数值积分/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E6%95%B0%E5%80%BC%E7%A7%AF%E5%88%86/","excerpt":"","text":"","categories":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E5%AD%A6/"}],"tags":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E5%AD%A6/"},{"name":"微积分","slug":"微积分","permalink":"https://cyx13935786602.github.io/tags/%E5%BE%AE%E7%A7%AF%E5%88%86/"}]},{"title":"分段打表","slug":"分段打表","date":"2020-01-03T15:17:16.000Z","updated":"2020-01-03T15:34:18.959Z","comments":true,"path":"2020/01/03/分段打表/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E5%88%86%E6%AE%B5%E6%89%93%E8%A1%A8/","excerpt":"","text":"","categories":[{"name":"数学 - 暴力","slug":"数学-暴力","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E5%AD%A6-%E6%9A%B4%E5%8A%9B/"}],"tags":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E5%AD%A6/"},{"name":"暴力","slug":"暴力","permalink":"https://cyx13935786602.github.io/tags/%E6%9A%B4%E5%8A%9B/"}]},{"title":"牛顿迭代法","slug":"牛顿迭代法","date":"2020-01-03T15:17:03.000Z","updated":"2020-01-03T15:35:43.603Z","comments":true,"path":"2020/01/03/牛顿迭代法/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E7%89%9B%E9%A1%BF%E8%BF%AD%E4%BB%A3%E6%B3%95/","excerpt":"","text":"","categories":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E5%AD%A6/"}],"tags":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E5%AD%A6/"},{"name":"迭代法","slug":"迭代法","permalink":"https://cyx13935786602.github.io/tags/%E8%BF%AD%E4%BB%A3%E6%B3%95/"}]},{"title":"线性代数","slug":"线性代数","date":"2020-01-03T15:16:38.000Z","updated":"2020-01-03T15:39:55.083Z","comments":true,"path":"2020/01/03/线性代数/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/","excerpt":"","text":"","categories":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E5%AD%A6/"}],"tags":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E5%AD%A6/"}]},{"title":"线性规划","slug":"线性规划","date":"2020-01-03T15:16:28.000Z","updated":"2020-01-03T15:40:32.274Z","comments":true,"path":"2020/01/03/线性规划/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/","excerpt":"","text":"","categories":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E5%AD%A6/"}],"tags":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E5%AD%A6/"}]},{"title":"博弈论学习","slug":"博弈论学习","date":"2020-01-03T15:16:13.000Z","updated":"2020-01-03T15:32:57.951Z","comments":true,"path":"2020/01/03/博弈论学习/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E5%8D%9A%E5%BC%88%E8%AE%BA%E5%AD%A6%E4%B9%A0/","excerpt":"","text":"","categories":[{"name":"数学 - 博弈论","slug":"数学-博弈论","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E5%AD%A6-%E5%8D%9A%E5%BC%88%E8%AE%BA/"}],"tags":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E5%AD%A6/"}]},{"title":"斐波那契数列","slug":"斐波那契数列","date":"2020-01-03T15:15:48.000Z","updated":"2020-01-03T15:33:41.877Z","comments":true,"path":"2020/01/03/斐波那契数列/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/","excerpt":"","text":"","categories":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E5%AD%A6/"}],"tags":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E5%AD%A6/"}]},{"title":"Min_25筛","slug":"Min-25筛","date":"2020-01-03T15:14:55.000Z","updated":"2020-01-03T15:47:58.362Z","comments":true,"path":"2020/01/03/Min-25筛/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/Min-25%E7%AD%9B/","excerpt":"","text":"","categories":[{"name":"数学 - 数论","slug":"数学-数论","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E5%AD%A6-%E6%95%B0%E8%AE%BA/"}],"tags":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E5%AD%A6/"}]},{"title":"杜教筛","slug":"杜教筛","date":"2020-01-03T15:14:38.000Z","updated":"2020-01-03T15:33:40.530Z","comments":true,"path":"2020/01/03/杜教筛/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E6%9D%9C%E6%95%99%E7%AD%9B/","excerpt":"","text":"","categories":[{"name":"数学 - 数论","slug":"数学-数论","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E5%AD%A6-%E6%95%B0%E8%AE%BA/"}],"tags":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E5%AD%A6/"}]},{"title":"莫比乌斯反演","slug":"莫比乌斯反演","date":"2020-01-03T15:14:25.000Z","updated":"2020-01-03T15:35:09.139Z","comments":true,"path":"2020/01/03/莫比乌斯反演/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/","excerpt":"","text":"","categories":[{"name":"数学 - 数论","slug":"数学-数论","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E5%AD%A6-%E6%95%B0%E8%AE%BA/"}],"tags":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E5%AD%A6/"}]},{"title":"Lucas定理","slug":"Lucas定理","date":"2020-01-03T15:14:05.000Z","updated":"2020-01-03T15:29:36.624Z","comments":true,"path":"2020/01/03/Lucas定理/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/Lucas%E5%AE%9A%E7%90%86/","excerpt":"","text":"","categories":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E5%AD%A6/"}],"tags":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E5%AD%A6/"}]},{"title":"BGSG","slug":"BGSG","date":"2020-01-03T13:44:28.000Z","updated":"2020-01-03T16:13:48.974Z","comments":true,"path":"2020/01/03/BGSG/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/BGSG/","excerpt":"","text":"算法简介BSGS（baby-step gaint-step），即大步小步算法。常用于求解离散对数问题。 a^x \\equiv b \\pmod p其中$a \\perp b$。 方程的解 $x$ 满足 $0 \\le x &lt; p$。 算法过程 设集合S = {$k | k = a^i \\bmod p$} 计算$a^i \\bmod p , i \\in [1, \\sqrt p]$, 加入集合S 在集合S中查找b，若不存在所需元素，则$b = b \\times a^{\\sqrt p} \\bmod p$；若存在该元素，则得到一个可行解。 算法证明因为$a \\perp b$， 所以由费马小定理得到$a^{p - 1} = 1 \\pmod p$； 因此只需要求解$x \\in [1, p - 1]$ 中的解$x$即可（ $x &gt; p$ 后所得值重复）。由此得到朴素O（p）算法：枚举x的值。 对该算法进行优化，运用分块思想， 将总序列分为 T 块，则每块元素个数为 $\\left( \\frac{p}{T} \\right)$, 得到总时间复杂度为O($\\frac{p}{T} + T$), 易证当 $T = \\sqrt p$ 时时间复杂度最低。 时间复杂度计算 [1, $\\sqrt p$] 为 O($\\sqrt p$), 之后最多 $\\sqrt p$ 次查询。 总时间复杂度为$O(\\sqrt p)$ Code12#include&lt;iostream&gt;#include&lt;cstdio&gt;","categories":[{"name":"数学 - 数论","slug":"数学-数论","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E5%AD%A6-%E6%95%B0%E8%AE%BA/"}],"tags":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E5%AD%A6/"}]},{"title":"中国剩余定理-CRT","slug":"中国剩余定理-CRT","date":"2020-01-03T13:38:12.000Z","updated":"2020-01-03T16:23:38.630Z","comments":true,"path":"2020/01/03/中国剩余定理-CRT/","link":"","permalink":"https://cyx13935786602.github.io/2020/01/03/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86-CRT/","excerpt":"","text":"算法简介中国剩余定理（Chinese Remainder Theorem, CRT）是用来求解如下形式的一元线性同余方程组($\\forall b_{k} \\in N$) ： \\begin{cases} x &\\equiv& a_1 \\pmod {b_{1}}\\\\ x &\\equiv& a_2 \\pmod {b_{2}}\\\\ &\\vdots&\\\\ x &\\equiv& a_n \\pmod {b_{n}}\\\\ \\end{cases}前置知识两个方程合并 设两个方程分别为 ：$x \\equiv a_1 \\pmod {m_1}$,$x \\equiv a_2 \\pmod {m_2}$. 转化为不定方程：$x = m_1p + a_1, x = m_2q + a_2$ , $p, q \\in N^*$,则有$m_1p - m_2q = a_2 - a_1$. 由裴蜀定理， 当 $a_2 - a_1$ 不能被 $\\gcd(m_1, m_2)$ 整除时， 无解； 其他情况下， 可通过EXGCD解出来一组可行解 $(p, q)$ ； 则原来的两个方程组成的模方程组的解为$x \\equiv b \\pmod M$, 其中 $b = m_1p + a_1, M = \\text{lcm}(m_1, m_2)$ 算法流程 获取两个模方程 合并两个模方程 重复上述操作， 得到所有模方程的合并方程代码实现123#include&lt;iostream&gt;#include&lt;cstdio&gt;using namespace std;","categories":[{"name":"数学 - 数论","slug":"数学-数论","permalink":"https://cyx13935786602.github.io/categories/%E6%95%B0%E5%AD%A6-%E6%95%B0%E8%AE%BA/"}],"tags":[{"name":"数学","slug":"数学","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E5%AD%A6/"},{"name":"数论","slug":"数论","permalink":"https://cyx13935786602.github.io/tags/%E6%95%B0%E8%AE%BA/"}]}]}